local gd = require "main.game_data"
local gf = require "main.game_functions"
--NEED TO SET PLAYER BASED ON CLASS CHOSEN

function init(self)
	msg.post(".", "acquire_input_focus")

	self.player = gd.player
	self.health = self.player.health
	self.move_positions = {vmath.vector3(100, 50, 0), vmath.vector3(322, 50, 0), vmath.vector3(540, 50, 0)}
	self.move_options = gf.generate_player_move_nodes(self.player, self.move_positions)
	print("player gui init done")
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.released then
		for i=1,3 do
			local selected_node_tree = self.move_options[i]
			local player_move_selected = selected_node_tree[hash("player_move")]
			if gui.pick_node(player_move_selected, action.x, action.y) then
				--msg.post("main:/enemy#enemy_controller", "move")
				print("You touched the: " .. selected_node_tree["move_type"])
				
				msg.post("level_1:/enemy/enemy#enemy", "select move", {player_move = selected_node_tree["move_type"]})
			end
		end
	end
	
	if action_id == hash("space") then
		print("player gui spacebar")
	end
end

function final(self)
	-- Return input focus when the object is deleted
	--msg.post(".", "release_input_focus")
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("outcome") then
		print("Player outcome: "..message[1])
	end
end

function on_reload(self)
	-- Add input-handling code here
	-- Remove this function if not needed
end
