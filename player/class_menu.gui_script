local menu_node
local first_touch_y
local menu_min_y
local menu_max_y

function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post(".", "init_done")
	
	print("class_menu gui init finished")
end

function final(self)
	-- Add finalization code here
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("init_done") then
		menu_node = gui.get_node("classes")
		local menu_position = gui.get_position(menu_node)
		local menu_size = gui.get_size(menu_node)
		local container_size = gui.get_size(gui.get_node("clip_box"))
		local delta_y = menu_size.y - container_size.y

		menu_min_y = menu_position.y --set minimum so can't scroll past top

		--if the child node is longer than the parent allow it to scroll until you can see the bottom
		if delta_y >= 0 then
			menu_max_y = menu_position.y + delta_y
		else
			menu_max_y = menu_position.y
		end
	end
	
end

function on_input(self, action_id, action)
	if action_id == hash("touch") then

		if action.pressed then
			first_touch_y = action.y
		end
		
		local position = gui.get_position(menu_node)
		local start_menu_y = position.y

		if first_touch_y ~= action.y then
			local delta_y = action.y - first_touch_y
			local new_menu_y = start_menu_y + delta_y
			if new_menu_y >= menu_min_y and new_menu_y <= menu_max_y then
				gui.set_position(menu_node, vmath.vector3(0, new_menu_y, 0))
			end
		end

		if action.released then
			print("released")
		end

		first_touch_y = action.y
	end

	if action_id == hash("space") then
		print("player gui spacebar")
	end
end

function on_reload(self)
	-- Add input-handling code here
	-- Remove this function if not needed
end
